<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnVoegToe.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAANsAAABQCAYAAACQ9ABbAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAAEnQAABJ0Ad5mH3gAAAMnSURBVHhe7drPS9NxHMfx/qJuXbx18mQXhSA8aAcJFAxh
        IhHSQUIRcTsoiMaEUhOViUESw1jiKBZmIuESXJZOcFMcssPQwzven32bDqeUffc+PR/wAtmv25N9P995
        K5fLCWOs+iM2xoxGbIwZjdgYMxqxMWY0YmPMaNfGdnCYlbnVqHREBqRpoltqR1rldv99xpg3bULbaJvt
        lanEouxl9iu2pLsytncbK+6DAgtBWdyMy+df3ySdywiAc9qEtrG0lZCnb4dcMxpdpaYuxaZldi2E5NHM
        c8nmj72PBPA3Tgp5F13LdI9s7/8sa6ssNg2tPhyQ+Y2Y91YAN7GSWpMHL59Icne7cmz6jUZogD/08lLP
        c5di0zOaXjoC8E9weVKGP0yfx6Z3HfVgxxkN8Ffh7FQaxjtlfSdZjE3vnuihDoD/Xnyal75ouBib/kag
        ty4B+C958MPdeHSx1Y22S+oo7T0FwE96KXlnsLEYW02o2f0+AKA69L9NXGz6B4DqITbACLEBRogNMEJs
        gBFiA4wQG2CE2AAjxAYYITbACLEBRogNMEJsgBFiA4wQG2CE2AAjxAYYITbACLEBRogNMEJsgBFiA4wQ
        G2CE2AAjxAYYITbACLEBRogNMEJsgBFiA4wQG2CE2AAjxAYYITbACLEBRogNMEJsgBFiA4wQG2CE2AAj
        xAYYITbACLEBRogNMEJsgBFiA4wQG2CkFNudwUYpnJ16DwPwWym22pFWSecy3sMA/FaKrWW6R1ZSa97D
        APyUOkpL3Wh7Mbah2GsJLk96TwHw0/xGTLoWQsXYkrvbcm/sMec2oAraI/3y5musGJtu8P0rGY7PeE8D
        8MPiZlw6IgOusVJsB4dZaZrolvX0lvcyAP8jmz92V4x7mf3y2HTrO0lpGO90BzoAN6ehPZx6JrHNRKmv
        sth08e9fpD4ckLGPEe9tAP7F0lbCfaNdDE13KTadXlL2RcOuTL2TopUCuNpJIe/OZ4GFoLTN9pYuHS+u
        Ymx/pmXqLcu7Qy3uRznGWOXVhJrdjZC51WjFlnTXxsYY82/ExpjRiI0xoxEbY0YjNsZMlpPf3QfcDwzb
        wwcAAAAASUVORK5CYII=
</value>
  </data>
</root>